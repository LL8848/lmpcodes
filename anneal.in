atom_style full
units real

# ff and T0 are passed by command line
# variable    ff string opls2015
# variable	T0  equal 298		# initial temperature [K] (state of input file)
variable    Tt  equal ${T0}       # target temperature [K]
variable 	P0  equal 1.0		# pressure [atm]
variable    DT  equal 0.5       # timestep [fs]

variable    rho equal density
variable 	vol equal vol
variable 	etotal equal etotal
variable    pe equal pe
variable    ke equal ke
variable    temperature equal temp
variable    pressure equal press

# read data file
read_data   pec5.${ff}.rep

# read restart file from previous equilibrium run
# read_restart pec5_125.equi${T0}K

# initialization
bond_style harmonic
angle_style harmonic
dihedral_style opls
improper_style harmonic
pair_style lj/cut/coul/long 12.0 12.0
pair_modify tail yes mix geometric
special_bonds lj/coul 0.0 0.0 0.5
kspace_style pppm 0.00001

# force field parameters
include    pec5.${ff}.settings

timestep ${DT}
reset_timestep  0

# if read from data file, Tt == T0
print "------------------------------------------------------------"
print "Quick NPT at T = ${T0} K, P = ${P0} atm "
print "   "
fix 		quicknpt all npt/omp temp ${T0} ${T0} $(100*dt) iso ${P0} ${P0} $(1000*dt)
fix         qnpt_monitor all ave/time 10 1000 10000 v_rho v_etotal ave running file qnpt_monitor_${T0}K.out
thermo		10000
thermo_style   	custom step temp vol press density pe etotal
run		1000000	# 1*0.5 nanoseconds
# run     100
unfix		quicknpt
unfix       qnpt_monitor
write_restart  	pec5.quicknpt.*

# heat(or cool) from T0 to Tt   (if Tt != T0)
# change rate: ~15 K/ns
# variable Nrun equal ceil(abs(${Tt}-${T0})/15/${DT})*1000000
# print "------------------------------------------------------------"
# print "Heat(or cool) from T0 ${T0} K to Tt ${Tt} K at ~ 15 K/ns at constant density"
# print "Run steps ${Nrun} ..."
# print "   "
# fix    heat all nvt/omp temp ${T0} ${Tt} $(100*dt)
# fix    heat_monitor all ave/time 10 1000 10000 v_pressure v_etotal v_ke v_pe ave running file heat_monitor.out
# thermo    10000
# thermo_style    custom step temp vol press density pe etotal
# run             ${Nrun}	# 2*0.5 nanoseconds
# unfix           heat
# unfix           heat_monitor
# write_restart  	pec5.heat.*


# nvt at Tt, explore the configuration space (relax the system)
print "------------------------------------------------------------"
print "Run nvt at Tt ${Tt} K to explore the configuration space (relax the system) ..."
print "   "
fix    relax all nvt/omp temp ${Tt} ${Tt} $(100*dt)
fix    nvt_monitor all ave/time 10 1000 10000 v_pressure v_etotal v_ke v_pe ave running file nvt_monitor.out
thermo    10000
thermo_style    custom step temp vol press density pe etotal
run             20000000	# 20*0.5 nanoseconds
# run     100
unfix           relax
unfix           nvt_monitor
write_restart  	pec5.relax.*

# equilibrate at constant pressure
print "------------------------------------------------------------"
print "Run npt at ${P0} atm to find the appropriate density ..."
print "   "
fix 		barostat all npt/omp temp ${Tt} ${Tt} $(100*dt) iso ${P0} ${P0} $(1000*dt)
fix         npt_monitor all ave/time 10 1000 10000 v_rho v_etotal ave running file npt_monitor.out
thermo		10000
thermo_style   	custom step temp vol press density pe etotal
run		20000000	# 40*0.5 nanoseconds
# run     100
unfix		barostat
unfix       npt_monitor
write_restart  	pec5.barostat.*

# production run of density calculation
print "------------------------------------------------------------"
print "Productin run for density ..."
print "   "
fix 		nptproduction all npt/omp temp ${Tt} ${Tt} $(100*dt) iso ${P0} ${P0} $(1000*dt)
fix         onerho all ave/time 10 1000 10000 v_rho ave one file pro.density_one.out
fix         runrho all ave/time 10 1000 10000 v_rho ave running file pro.density_running.out
thermo		10000
thermo_style   	custom step temp vol press pe etotal f_onerho f_runrho
run		10000000	# 10*0.5 nanoseconds
# run     20000
unfix		nptproduction
write_restart  	pec5.nptproduction.*


variable    averho  equal f_runrho
variable        fr equal (${rho}/${averho})^(1/3.0)  # resize ratio
print "------------------------------------------------------------"
print "Average density: ${averho} g/cm3"
print "Current transient density: ${rho} g/cm3"
print "Resize ratio, (average rho/transient rhoe)^(1/3.0): ${fr}"
unfix       runrho
unfix       onerho

# deform the box to match the average density (rho);
# pressure would change (slightly)
print "------------------------------------------------------------"
print "Deforming the box to match the average density ..."
print "   "
fix             nve all nve
fix             langevin all langevin ${Tt} ${Tt} $(100*dt) 8848
fix             resize all deform 1 x scale ${fr} y scale ${fr} z scale ${fr}
fix             nve_monitor all ave/time 10 1000 10000 v_etotal v_ke v_pe ave running file nve_monitor.out
thermo          10000
thermo_style    custom step temp vol press density ke pe etotal
run             4000000		# 2 ns
# run 20000
unfix           nve
unfix           langevin
unfix           resize
write_restart   pec5_125.equi${Tt}K

print "------------------------------------------------------------"
print "Resize completed"
print "------------------------------------------------------------"
print "Final transient density: ${rho} g/cm3"
print "------------------------------------------------------------"

# Now the system should be fully equilibrated.
# This file is used to run NEMD simulation later
